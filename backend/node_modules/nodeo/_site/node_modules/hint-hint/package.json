{
  "name": "hint-hint",
  "version": "0.3.0",
  "description": "A module to produce TAP output for JSHint.",
  "main": "lib/hint-hint.js",
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/diy/hint-hint.git"
  },
  "author": {
    "name": "Zach Bruggeman",
    "email": "zachb@diy.org"
  },
  "license": "Apache 2.0",
  "dependencies": {
    "async": "~0.2.9",
    "glob": "~3.2.3",
    "jshint": "~2.1.9",
    "lodash": "~1.3.1"
  },
  "devDependencies": {
    "codebux": "~0.1.2",
    "tap": "~0.4.3"
  },
  "keywords": [
    "jshint",
    "tap",
    "test"
  ],
  "readme": "## hint-hint\n\nA module that produces TAP output for JSHint. *hint hint*\n\n[![Build Status](https://travis-ci.org/diy/hint-hint.png?branch=master)](https://travis-ci.org/diy/hint-hint)\n\n[![NPM](https://nodei.co/npm/hint-hint.png)](https://nodei.co/npm/hint-hint/)\n\n### Usage\n\n```js\nvar hinthint = require('hint-hint');\n\nhinthint('file/path/*.js', config)\n```\n\nThe `hinthint` function supports splats. All strings are regarded as file paths, objects are regarded as [JSHint configurations](http://www.jshint.com/docs/config/). As well, if a `.jshintrc` file is present in the current working directory, it will extend the config from that.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/diy/hint-hint/issues"
  },
  "_id": "hint-hint@0.3.0",
  "dist": {
    "shasum": "3c4955fb47b50361fbca5dca856d56d198b7b351",
    "tarball": "http://registry.npmjs.org/hint-hint/-/hint-hint-0.3.0.tgz"
  },
  "_from": "hint-hint@~0.3.0",
  "_npmVersion": "1.3.5",
  "_npmUser": {
    "name": "remixz",
    "email": "zbruggeman@me.com"
  },
  "maintainers": [
    {
      "name": "remixz",
      "email": "zbruggeman@me.com"
    }
  ],
  "directories": {},
  "_shasum": "3c4955fb47b50361fbca5dca856d56d198b7b351",
  "_resolved": "https://registry.npmjs.org/hint-hint/-/hint-hint-0.3.0.tgz",
  "homepage": "https://github.com/diy/hint-hint"
}
